
@model Kaffeplaneten.Models.CustomerModel

@{
    ViewBag.Title = "createUser";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    @Html.Action("HeaderAndMenuBar", "Layout")
    <fieldset>
        <legend>Brukerregistrering</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.firstName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.firstName)
            @Html.ValidationMessageFor(model => model.firstName)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.lastName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.lastName)
            @Html.ValidationMessageFor(model => model.lastName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.email)
        </div>
        <div class="editor-field">  
            @Html.EditorFor(model => model.email)
            @Html.ValidationMessageFor(model => model.email)
        </div>
  
        <div class="editor-label">
            @Html.LabelFor(model => model.password)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.password)
            @Html.ValidationMessageFor(model => model.password)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.passwordVerifier)
        </div>

        <div class="editor-field">
            @Html.PasswordFor(model => model.passwordVerifier)
            @Html.ValidationMessageFor(model => model.passwordVerifier)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.phone)
            @Html.ValidationMessageFor(model => model.phone)
        </div>

        <div class="checkbox-label">
            @Html.LabelFor(model => model.sameAdresses)
        </div>
        <div class="checkbox-inline">
            @Html.CheckBoxFor(model => model.sameAdresses, new { id = "checkbox", onclick = "sameAdress(this)" })
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.adress)
        </div>
      
        <div class="editor-field">
            @Html.TextBoxFor(model => model.adress, new { id = "adress" })
            @Html.ValidationMessageFor(model => model.adress)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.zipCode)
            @Html.LabelFor(model => model.province)
        </div>



        <div class="editor-field">
            @Html.TextBoxFor(model => model.zipCode, new { id="zipcode"})
            @Html.ValidationMessageFor(model => model.zipCode)
            @Html.TextBoxFor(model => model.province, new { id = "province" })
            @Html.ValidationMessageFor(model => model.province)
        </div>
        
        <div class="editor-label">  
            @Html.LabelFor(model => model.payAdress)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.payAdress, new { id = "payAdress"})
            @Html.ValidationMessageFor(model => model.payAdress)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.payZipcode)
            @Html.LabelFor(model => model.payProvince)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.payZipcode, new { id = "payZipcode" })
            @Html.ValidationMessageFor(model => model.payZipcode)
            @Html.EditorFor(model => model.payProvince)
            @Html.ValidationMessageFor(model => model.payProvince)
        </div>
  

            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opprett bruker" class="btn btn-success" />
            </div>
        
    </fieldset>

    <script type="text/javascript">
         
        function sameAdress() {
            if ($('#checkbox').is(":checked")) {
                $('#adress').html(function () {
                    $('#payAdress').val($(this).val());
                });
                $('#adress').keyup(function () {
                    $('#payAdress').val($(this).val());
                });
                $('#adress').change(function () {
                    $('#payAdress').val($(this).val());
                });

                $('#zipcode').html(function () {
                    $('#payZipcode').val($(this).val());
                });
                $('#zipcode').keyup(function () {
                    $('#payZipcode').val($(this).val());
                });
                $('#zipcode').change(function () {
                    $('#payZipcode').val($(this).val());
                });

                $('#province').html(function () {
                    $('#payProvince').val($(this).val());
                });
                $('#province').keyup(function () {
                    $('#payProvince').val($(this).val());
                });
                $('#province').change(function () {
                    $('#payProvince').val($(this).val());
                });

            }
            else {
                $('#payAdress').attr("disabled", false);
                $('#payAdress').val("");
                $('#payProvince').attr("disabled", false);
                $('#payProvince').val("");
                $('#payZipcode').attr("disabled", false);
                $('#payZipcode').val("");
            }

        }

        
        
            
                
               
            
    </script>

}


     

